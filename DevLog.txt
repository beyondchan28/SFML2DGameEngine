***DEADLINE next week, platformer game done***

need to read more
- pass by value vs pass by reference (X)
- find out about whats the usage of tag, active and id variable
- flow of spawning and destroying entity
- search about std::remove_if
- understanding about how normalized works
    + its working but it was still 20% more speed when moving diagonally
- learn how to allocate and deallocate actually works. maybe by making it from scratch (?)
- how to erase data in C++ safely (?)
- macros (?)

todo:
- sound
- paused text
- special attack
- load config file (X)
- change background

runtime bug :
- pure virtual method called terminate called without an active exception ()
- at creating the small enemies ()

bug :
- the GameEngine object didnt get recognized on the scene class(X)
    + there is something to do with unimplented virtual/abstract function from the derived class
    + read more about how to inheritance works under the hood

todo:
- Cleaning the code, remove unncessary imports and others ()
- Action class and input map (X)
- Entity and new Component interface (X)
- Assets class (X)
- change all entity's visual with texture (X)
- rectangular collision shape (X)
- seperate the physics/collison detection into different class (X)
- Animation system (X)
- Debug mode (X)
    + Collision visual working, but need to determine based on the CCollision component 
    + The grid should relative to the View/Camera 
- Platformer physics ()
    + gravity
        * watch more about this stuff solved
    + AABB collision
        * testing on some tricky case
    + platformer jump and gravity interaction kinda confusing
    + need to find a way to check direction only on the collided tile
        * the current dircetion algorithm maybe not that efficient
        * need to validate the direction collision algorithm
    + need to find a way so that not always checking all the tiles for collision
- Movement system ()
    + use velocity, dont directly interact to the position
    + state changes
    + Celeste movement ?
- Game Engine class, Scene Base class and Scene class (X)
    + test the integration of Scene and GameEngine by displaying Scene_Menu
- The Entity not rendered at all (X)
    + EntityManager failed to work properly ( forgor to adding update function on gameLoop)
- Found the used of simulate, width, height, and currentFrame functions ()
    + simulate is for ghost/replay mechanic (?)
    + width and height for window size
- Implementing Grid Map (X)
    + the Dec entity bugged. not in placed properly and the image got cut in half (X)
- Implement View/Camera (X)
- Reset the state of the scene (X)
- Implement hot reload (?)
- Implement animation changes with state ()
    + some repeat animations and some not not repeat animation
    
    